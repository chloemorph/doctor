name: Automated tests

on:
  push:
    branches:
      - dev
  release:
    types:
      - published
  schedule:
    - cron: "0 0 */7 * *"
  workflow_dispatch:

jobs:
  #####################################
  ### Publishing on macOS and Linux ###
  #####################################
  build:
    name: Build ${{ matrix.os }} - Bash
    runs-on: ${{ matrix.os }}
    if: ${{ !contains(github.event.head_commit.message, '#docs') }}

    strategy:
      matrix:
        include:
          - node: 18
            os: macos-latest
            siteUrl: SITEURL_MACOS
          - node: 18
            os: ubuntu-latest
            siteUrl: SITEURL_LINUX

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
          registry-url: https://registry.npmjs.org/

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ matrix.os }}-release-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ matrix.os }}-release-

      - run: npm ci

      - run: npm start

      - run: npm link

      - name: Publish via Doctor
        run: |
          if [[ ${GITHUB_REF} != "refs/heads/main" ]]
          then
            git clone -b dev https://github.com/estruyf/doctor-sample
          else
            git clone https://github.com/estruyf/doctor-sample
          fi

          node ./scripts/prepare-sample.js
          cd doctor-sample

          startClean=""
          # Check on which branch it is running
          if [[ ${GITHUB_REF} == "refs/heads/main" || ${GITHUB_EVENT_NAME} == 'workflow_dispatch' ]]; then
            startClean="--cleanStart"
          fi

          skipPages=""
          # Check on which branch it is running
          if [[ ${GITHUB_EVENT_NAME} == "schedule" ]]; then
            skipPages="--skipExistingPages"
          fi

          doctor publish -a password --username "${{ secrets.USERNAME }}" --password "${{ secrets.PASSWORD }}" -u "${{ secrets[matrix.siteUrl] }}" --retryWhenFailed --cleanQuickLaunch --cleanEnd --confirm $startClean $skipPages
        env:
          DEBUG: ${{ secrets.DEBUG }}
          TRANSLATOR_KEY: ${{ secrets.TRANSLATOR_KEY }}

  #############################################
  ### Publishing on Windows with PowerShell ###
  #############################################
  build_pwsh:
    name: Build windows-latest - powershell
    runs-on: windows-latest
    if: ${{ !contains(github.event.head_commit.message, '#docs') }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-release-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-release-

      - run: npm ci
        shell: powershell

      - run: npm start
        shell: powershell

      - run: npm link
        shell: powershell

      - name: Publish via Doctor
        run: |
          if (${env:GITHUB_REF} -ne 'refs/heads/main') {
            git clone -b dev https://github.com/estruyf/doctor-sample
          } else {
            git clone https://github.com/estruyf/doctor-sample
          }

          node ./scripts/prepare-sample.js
          cd doctor-sample

          $startClean = ""
          if (${env:GITHUB_REF} -eq 'refs/heads/main' -or ${env:GITHUB_EVENT_NAME} -eq 'workflow_dispatch') {
            $startClean = "--cleanStart"
          }

          $skipPages=""
          # Check on which branch it is running
          if (${env:GITHUB_EVENT_NAME} -eq 'schedule') {
            $skipPages="--skipExistingPages"
          }

          doctor publish -a password --username "${{ secrets.USERNAME }}" --password "${{ secrets.PASSWORD }}" -u "${{ secrets.SITEURL_WINDOWS_POWERSHELL }}" --retryWhenFailed --cleanQuickLaunch --cleanEnd --confirm $startClean $skipPages
        shell: powershell
        env:
          DEBUG: ${{ secrets.DEBUG }}
          TRANSLATOR_KEY: ${{ secrets.TRANSLATOR_KEY }}

  ######################################
  ### Publishing on Windows with CMD ###
  ######################################
  build_cmd:
    name: Build windows-latest - cmd
    runs-on: windows-latest
    if: ${{ !contains(github.event.head_commit.message, '#docs') }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-release-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-release-

      - run: npm ci
        shell: cmd

      - run: npm start
        shell: cmd

      - run: npm link
        shell: cmd

      - name: Publish via Doctor
        run: |
          IF not "%GITHUB_REF%"=="refs/heads/main" (git clone -b dev https://github.com/estruyf/doctor-sample) else (git clone https://github.com/estruyf/doctor-sample)


          node ./scripts/prepare-sample.js
          cd doctor-sample

          IF "%GITHUB_REF%"=="refs/heads/main" (SET startClean="--cleanStart")
          IF "%GITHUB_EVENT_NAME%"=="workflow_dispatch" (SET startClean="--cleanStart")

          IF "%GITHUB_EVENT_NAME%"=="schedule" (SET skipPages="--skipExistingPages")

          doctor publish -a password --username "${{ secrets.USERNAME }}" --password "${{ secrets.PASSWORD }}" -u "${{ secrets.SITEURL_WINDOWS }}" --retryWhenFailed --cleanQuickLaunch --cleanEnd  --confirm %startClean% %skipPages%
        shell: cmd
        env:
          DEBUG: ${{ secrets.DEBUG }}
          TRANSLATOR_KEY: ${{ secrets.TRANSLATOR_KEY }}

  ##################################
  ### Run when a schedule failed ###
  ##################################
  restart_when_failed:
    name: Restarts the scheduled run when it failed
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' && failure()
    needs: [build, build_pwsh, build_cmd]
    steps:
      - name: Retry the workflow
        run: |
          curl -i \
          -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.ACTIONS_PAT }}" \
          https://api.github.com/repos/estruyf/doctor/actions/workflows/6155745/dispatches \
          -d '{"ref": "${{ github.ref }}" }'

  ##############################
  ### Start E2E with Cypress ###
  ##############################
  e2e_testing:
    name: Cypress E2E Testing for ${{ matrix.testTitle }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [build, build_pwsh, build_cmd]

    strategy:
      fail-fast: false
      matrix:
        include:
          - node: 14
            testTitle: macOS
            siteUrl: SITEURL_MACOS
            browser: chrome
          - node: 14
            testTitle: Linux
            siteUrl: SITEURL_LINUX
            browser: firefox
          - node: 14
            testTitle: Windows PowerShell
            siteUrl: SITEURL_WINDOWS_POWERSHELL
            browser: chrome
          - node: 14
            testTitle: Windows
            siteUrl: SITEURL_WINDOWS
            browser: firefox

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-release-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-release-

      - run: |
          npm ci

      - name: Preparing the Cypress config
        run: |
          node ./scripts/prepare-e2e.js
        env:
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          SITEURL: ${{ secrets[matrix.siteUrl] }}
          ENVIRONMENT: ${{ matrix.siteUrl }}

      - name: Cypress E2E testing
        run: |
          ./node_modules/.bin/cypress verify
          ./node_modules/.bin/cypress run --browser ${{ matrix.browser }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v2
        if: ${{ always() }} # To make sure we can see what went wrong
        with:
          name: screenshots-${{ matrix.testTitle }}
          path: ./**/screenshots/**/*.png

      - name: Upload videos
        uses: actions/upload-artifact@v2
        if: ${{ always() }} # To make sure we can see what went wrong
        with:
          name: videos-${{ matrix.testTitle }}
          path: ./**/cypress/videos/**/*.mp4

      - name: Prepare and generate reports
        if: ${{ always() }}
        run: |
          envType="${ENVTYPE,,}"
          envType="${envType/siteurl_/}"

          mv ./cypress/screenshots ./mochawesome-report
          ./node_modules/.bin/mochawesome-merge --reportDir mochawesome-report > mochawesome-report/$envType.json
          ./node_modules/.bin/marge ./mochawesome-report/$envType.json --charts -t "Doctor $envType" -p "Doctor $envType E2E Results"
          find ./mochawesome-report/.  -name "*.json" -type f -delete
        env:
          ENVTYPE: ${{ matrix.siteUrl }}

      - name: Upload reports
        uses: actions/upload-artifact@v2
        if: ${{ always() }} # To make sure we can see what went wrong
        with:
          name: reports-${{ matrix.testTitle }}
          path: ./mochawesome-report/**/*

  ####################################
  ### Push the results to gh pages ###
  ####################################
  publish_results:
    name: Publish the results
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: always() && ${{ !contains(github.event.head_commit.message, '#docs') }}
    needs: [e2e_testing]

    steps:
      - uses: actions/checkout@v2

      - name: Download Linux report
        uses: actions/download-artifact@v2
        with:
          name: reports-Linux
          path: reports

      - name: Download Windows report
        uses: actions/download-artifact@v2
        with:
          name: reports-Windows
          path: reports

      - name: Download Windows PowerShell report
        uses: actions/download-artifact@v2
        with:
          name: "reports-Windows PowerShell"
          path: reports

      - name: Download macOS report
        uses: actions/download-artifact@v2
        with:
          name: reports-macOS
          path: reports

      - name: Check directory
        run: |
          ls ./reports -R

      - name: Publish reports
        uses: JamesIves/github-pages-deploy-action@4.1.0
        with:
          branch: gh-pages
          folder: reports

  ###############################
  ### Release the new version ###
  ###############################
  release:
    name: Release the new version
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [publish_results]
    if: github.event_name != 'schedule' && success() && ${{ !contains(github.event.head_commit.message, '#docs') }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - run: npm ci

      - run: npm start

      - name: Publish release
        run: npm publish --access public
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Update the package version
        if: github.ref == 'refs/heads/dev'
        run: node scripts/update-package-version.js $GITHUB_RUN_ID

      - name: Publish beta release
        run: npm publish --tag next --access public
        if: github.ref == 'refs/heads/dev'
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
